
database systems
16-concurrency control
---------------------------------------------
我来帮你翻译这个数据库系统课程的PPT,这是关于并发控制理论的内容。我会按章节翻译主要内容:

# 并发控制理论

## 管理事项
- 项目#3截止时间:11月17日周日晚11:59
- 答疑时间:11月4日周一晚8:00(Zoom)
- 作业#4截止时间:11月3日周日晚11:59

## 课程状态
DBMS的并发控制和恢复组件贯穿于整个架构设计中。

## 动机示例1和2
通过银行账户余额的例子说明并发问题:
- 示例1展示了单个事务读取余额、检查余额、支付的过程
- 示例2展示了两个事务并发执行可能导致的问题

## 简单系统方案
- 按照到达顺序一次执行一个事务(串行执行)
- 事务开始前,将整个数据库复制到新文件
- 事务成功完成后,用新文件覆盖原文件
- 事务失败则删除脏副本

## 问题陈述
允许独立事务并发执行的好处:
- 更好的利用率/吞吐量
- 提高用户响应时间

同时也需要保证:
- 正确性
- 公平性

### 挑战:
- 操作的任意交错可能导致暂时的不一致(可以接受)或永久的不一致(不可接受)
- DBMS只关注数据的读写
- 需要形式化的正确性标准来判断交错是否有效

## ACID特性
- 原子性(Atomicity):事务要么全部执行,要么全不执行
- 一致性(Consistency):如果每个事务都是一致的且数据库初始状态一致,则最终状态也一致
- 隔离性(Isolation):一个事务的执行与其他事务隔离
- 持久性(Durability):事务一旦提交,其效果永久保持

## 调度(Schedule)的形式化属性
- 串行调度:不同事务的操作不交错
- 等价调度:对任何数据库状态,执行效果相同
- 可串行化调度:等价于某个串行执行的调度

## 冲突操作
两个操作发生冲突的条件:
- 来自不同事务
- 操作同一对象且至少一个是写操作

主要冲突类型:
- 读-写冲突(不可重复读)
- 写-读冲突(脏读)
- 写-写冲突(丢失更新)

## 结论
- 并发控制和恢复是DBMS最重要的功能之一
- 并发控制是自动的:
  - 系统自动插入锁/解锁请求并调度不同事务的操作
  - 确保执行效果等价于按某种顺序逐个执行事务

下节课内容:
- 两阶段锁
- 隔离级别

---------------------------------------------